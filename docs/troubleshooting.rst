.. _troubleshooting:

Troubleshooting
***************
Things to check...

- Check setup.cfg for :ref:`configuration`
- Check all applicable :ref:`envvars`
- Git tags beginning with ``v``. This is, depending on configuration, used
  for getting the last version.

.. _debug-usage:

Showing debug output
====================
If you are having trouble with `semantic-release` there is a way to get more
information during it's work.

By setting the ``DEBUG`` environment variable you can get various amounts of
information from the inner workings of semantic-release. The information is
often undescriptive on its own but could be very useful together with the
source code of the project.

.. note::
  ``DEBUG`` is always set on GitHub Actions using the built-in action.

Windows Command Prompt::

    SET DEBUG=*
    semantic-release changelog

Powershell::

    $env:DEBUG='*'
    semantic-release changelog

Bash::

    # '*' will show everything
    $ DEBUG='*' semantic-release changelog
    semantic-release changelog

Filtering
---------
By changing the ``DEBUG`` variable to match the namespace you are
interested in you can filter out things you do not want to see. ::

    # To only show the cli part use the following
    $ DEBUG="semantic_release:cli" semantic_release changelog
    semantic_release:cli 'main args:' {'force_level': None, 'post': False, 'retry': False, 'noop': False} +0.0us
    semantic_release:cli 'main env:' 'GH_TOKEN="None",PYPI_USERNAME="None",PYPI_PASSWORD="None",' +2.0ms
    semantic_release:cli 'main config:' {'check_build_status': 'false', 'commit_message': 'Automatically generated by python-semantic-release', 'commit_parser': 'semantic_release.history.angular_parser', 'patch_without_tag': 'false', 'upload_to_pypi': 'true', 'version_source': 'commit'} +2.0ms
    semantic_release:cli 'changelog got current_version' '4.1.0' +7.0ms
    semantic_release:cli 'changelog got previous_version' '4.0.2' +283.0ms
    ...

To get everything under history but nothing else::

    $ DEBUG="semantic_release:history:*" semantic_release changelog
    semantic_release:history:logs 'generate_changelog("4.0.2", "4.1.0")' +0.0us
    semantic_release:history:logs 'Ignoring' UnknownCommitMessageStyleError('Unable to parse the given commit message: 4.1.0\n\nAutomatically generated by python-semantic-release\n',) +91.0ms
    semantic_release:history:parser_angular "parse_commit_message -> (0, documentation, readme, ('add testing instructions', '', ''))" +0.0us
    semantic_release:history:parser_angular "parse_commit_message -> (2, feature, ci_checks, ('add support for bitbucket', '', ''))" +2.0ms
    semantic_release:history:parser_angular "parse_commit_message -> (0, documentation, None, ('Add installation instructions for development (#106)', '', ''))" +3.0ms
    semantic_release:history:logs 'markdown_changelog(version="4.1.0", header=False, changelog=...)' +9.0ms
    ...


For more detailed information on how to use the debug functionality
please have a look at https://pypi.org/project/ndebug/ which is the module
that is used for outputing the information.
